# Generated by tools/gen_errorcodes.nim. DO NOT EDIT!

type
  ErrorCode* = enum ## All possible errors in one enum.
    Success  ## Operation completed successfully.
    OverflowError  ## Integer overflow or underflow error.
    Failure  ## General failure, unknown error, etc.
    BugError  ## Programming bug detected.
    IndexError  ## Array index out of bounds.
    RangeError  ## Range check error.
    OverlapError  ## Source and destination memory overlaps.
    SyntaxError  ## A general parsing error.
    OutOfMemError  ## Not enough memory left.
    DiskFullError  ## No space left on device.
    StackOverflow  ## No stack space left.
    IOError  ## I/O error.
    ValueError  ## Invalid argument. Or: Bad/missing message.
    KeyError  ## Invalid key.
    EndOfStreamError  ## End of stream/file reached.
    SkipError  ## Skip to next item.
    FullError  ## No space left in the buffer. Or: Argument list too long.
    EmptyError  ## No message is available.
    BusyError  ## Device is busy. Too many requests.
    DeadResource  ## Dead thread/owner/child.
    ResourceExhaustedError  ## Thread/process/etc creation failed.
    DescriptorExhaustedError  ## Too many files open in system.
    PermissionDenied  ## Permission denied.
    RetryError  ## Resource unavailable, try again.
    TimeoutError  ## Connection timed out.
    InterruptedError  ## Interrupted function.
    DeadlockError  ## Resource deadlock would occur.
    LockedError  ##  Resource is locked.
    FormatMismatch  ##  Source and destination have incompatible formats.
    AlreadyConnected  ## Address in use. Socket is connected.
    AddressNotAvailable  ## Address not available.
    AddressFamilyUnsupported  ## Address family not supported.
    BadOperation  ## Operation not supported. Bad Request.
    AbortedOperation  ## Operation canceled. Connection aborted.
    UnimplementedOperation  ## Operation is not implemented.
    AlreadyInProgress  ## Operation already in progress.
    NameTooLong  ## Path/Filename/URL too long.
    NameExists  ## Name file/directory already exists.
    NameNotFound  ## No such file or directory or device.
    ContentTooLong  ## File/content too large.
    BadDescriptor  ## Bad file descriptor/pipe/process/etc.
    BadExecutable  ## Executable file format error.
    BadLink  ## Too many levels of symbolic links. Too many links. Cross-device link. HTTP: Misdirected request.
    BadProtocol  ## Protocol wrong type for socket. Protocol not available. HTTP version not supported.
    ProtocolError  ## Protocol error.
    ReadonlyProtection  ## Cannot write to readonly data.
    SegFault  ## Bad address. Segmentation fault. Nil pointer derefence.
    DiskCorruption  ## Corrupted disk/file/table.
    Disconnected  ## Network is down. Network unreachable. Connection reset. The socket is not connected.
    RefusedConnection  ## Connection refused.
    UnreachableHost  ## Host is unreachable. Bad Gateway.
    UnrecoverableState  ## State not recoverable.
    AuthenticationRequired  ## Network authentication required.
    RedirectError  ## Redirect to other URL/path.
    Reserved1  ## Reserved for future extensions. This field will then be renamed!
    Reserved2  ## Reserved for future extensions. This field will then be renamed!
    Reserved3  ## Reserved for future extensions. This field will then be renamed!
    Reserved4  ## Reserved for future extensions. This field will then be renamed!
    Reserved5  ## Reserved for future extensions. This field will then be renamed!
    Reserved6  ## Reserved for future extensions. This field will then be renamed!
    Reserved7  ## Reserved for future extensions. This field will then be renamed!
    Reserved8  ## Reserved for future extensions. This field will then be renamed!
    Reserved9  ## Reserved for future extensions. This field will then be renamed!

var EOVERFLOW {.importc: "EOVERFLOW", header: "<errno.h>".}: int32
var ERANGE {.importc: "ERANGE", header: "<errno.h>".}: int32
var EDOM {.importc: "EDOM", header: "<errno.h>".}: int32
var ENOMEM {.importc: "ENOMEM", header: "<errno.h>".}: int32
var ENOSPC {.importc: "ENOSPC", header: "<errno.h>".}: int32
var EIO {.importc: "EIO", header: "<errno.h>".}: int32
var EINVAL {.importc: "EINVAL", header: "<errno.h>".}: int32
var EBADMSG {.importc: "EBADMSG", header: "<errno.h>".}: int32
var EILSEQ {.importc: "EILSEQ", header: "<errno.h>".}: int32
var ENOMSG {.importc: "ENOMSG", header: "<errno.h>".}: int32
var EDESTADDRREQ {.importc: "EDESTADDRREQ", header: "<errno.h>".}: int32
var E2BIG {.importc: "E2BIG", header: "<errno.h>".}: int32
var ENOBUFS {.importc: "ENOBUFS", header: "<errno.h>".}: int32
var ENODATA {.importc: "ENODATA", header: "<errno.h>".}: int32
var EBUSY {.importc: "EBUSY", header: "<errno.h>".}: int32
var ETXTBSY {.importc: "ETXTBSY", header: "<errno.h>".}: int32
var ECHILD {.importc: "ECHILD", header: "<errno.h>".}: int32
var EOWNERDEAD {.importc: "EOWNERDEAD", header: "<errno.h>".}: int32
var ENOLCK {.importc: "ENOLCK", header: "<errno.h>".}: int32
var ENFILE {.importc: "ENFILE", header: "<errno.h>".}: int32
var EACCES {.importc: "EACCES", header: "<errno.h>".}: int32
var EPERM {.importc: "EPERM", header: "<errno.h>".}: int32
var EAGAIN {.importc: "EAGAIN", header: "<errno.h>".}: int32
var EWOULDBLOCK {.importc: "EWOULDBLOCK", header: "<errno.h>".}: int32
var ETIMEDOUT {.importc: "ETIMEDOUT", header: "<errno.h>".}: int32
var ETIME {.importc: "ETIME", header: "<errno.h>".}: int32
var EINTR {.importc: "EINTR", header: "<errno.h>".}: int32
var EDEADLK {.importc: "EDEADLK", header: "<errno.h>".}: int32
var EADDRINUSE {.importc: "EADDRINUSE", header: "<errno.h>".}: int32
var EISCONN {.importc: "EISCONN", header: "<errno.h>".}: int32
var EADDRNOTAVAIL {.importc: "EADDRNOTAVAIL", header: "<errno.h>".}: int32
var EAFNOSUPPORT {.importc: "EAFNOSUPPORT", header: "<errno.h>".}: int32
var EOPNOTSUPP {.importc: "EOPNOTSUPP", header: "<errno.h>".}: int32
var ENOTSUP {.importc: "ENOTSUP", header: "<errno.h>".}: int32
var ENOSYS {.importc: "ENOSYS", header: "<errno.h>".}: int32
var EPROTONOSUPPORT {.importc: "EPROTONOSUPPORT", header: "<errno.h>".}: int32
var ENOTTY {.importc: "ENOTTY", header: "<errno.h>".}: int32
var ESPIPE {.importc: "ESPIPE", header: "<errno.h>".}: int32
var EISDIR {.importc: "EISDIR", header: "<errno.h>".}: int32
var ENOTEMPTY {.importc: "ENOTEMPTY", header: "<errno.h>".}: int32
var ECANCELED {.importc: "ECANCELED", header: "<errno.h>".}: int32
var ECONNABORTED {.importc: "ECONNABORTED", header: "<errno.h>".}: int32
var ENETRESET {.importc: "ENETRESET", header: "<errno.h>".}: int32
var EALREADY {.importc: "EALREADY", header: "<errno.h>".}: int32
var EINPROGRESS {.importc: "EINPROGRESS", header: "<errno.h>".}: int32
var ENAMETOOLONG {.importc: "ENAMETOOLONG", header: "<errno.h>".}: int32
var EEXIST {.importc: "EEXIST", header: "<errno.h>".}: int32
var ENOENT {.importc: "ENOENT", header: "<errno.h>".}: int32
var EIDRM {.importc: "EIDRM", header: "<errno.h>".}: int32
var ENODEV {.importc: "ENODEV", header: "<errno.h>".}: int32
var ENOTDIR {.importc: "ENOTDIR", header: "<errno.h>".}: int32
var EFBIG {.importc: "EFBIG", header: "<errno.h>".}: int32
var EMSGSIZE {.importc: "EMSGSIZE", header: "<errno.h>".}: int32
var EPIPE {.importc: "EPIPE", header: "<errno.h>".}: int32
var EBADF {.importc: "EBADF", header: "<errno.h>".}: int32
var EMFILE {.importc: "EMFILE", header: "<errno.h>".}: int32
var ENOSTR {.importc: "ENOSTR", header: "<errno.h>".}: int32
var ENOTSOCK {.importc: "ENOTSOCK", header: "<errno.h>".}: int32
var ENOSR {.importc: "ENOSR", header: "<errno.h>".}: int32
var ENXIO {.importc: "ENXIO", header: "<errno.h>".}: int32
var ESRCH {.importc: "ESRCH", header: "<errno.h>".}: int32
var ENOEXEC {.importc: "ENOEXEC", header: "<errno.h>".}: int32
var ELOOP {.importc: "ELOOP", header: "<errno.h>".}: int32
var EMLINK {.importc: "EMLINK", header: "<errno.h>".}: int32
var EXDEV {.importc: "EXDEV", header: "<errno.h>".}: int32
var EPROTOTYPE {.importc: "EPROTOTYPE", header: "<errno.h>".}: int32
var ENOPROTOOPT {.importc: "ENOPROTOOPT", header: "<errno.h>".}: int32
var EPROTO {.importc: "EPROTO", header: "<errno.h>".}: int32
var EROFS {.importc: "EROFS", header: "<errno.h>".}: int32
var EFAULT {.importc: "EFAULT", header: "<errno.h>".}: int32
var ENETDOWN {.importc: "ENETDOWN", header: "<errno.h>".}: int32
var ENETUNREACH {.importc: "ENETUNREACH", header: "<errno.h>".}: int32
var ECONNRESET {.importc: "ECONNRESET", header: "<errno.h>".}: int32
var ENOTCONN {.importc: "ENOTCONN", header: "<errno.h>".}: int32
var ECONNREFUSED {.importc: "ECONNREFUSED", header: "<errno.h>".}: int32
var EHOSTUNREACH {.importc: "EHOSTUNREACH", header: "<errno.h>".}: int32
var ENOTRECOVERABLE {.importc: "ENOTRECOVERABLE", header: "<errno.h>".}: int32


proc posixToErrorCode*(err: int32): ErrorCode =
  if err == 0'i32:
    Success
  elif err == 0'i32:
    Success
  elif err == EOVERFLOW:
    OverflowError
  elif err == ERANGE or err == EDOM:
    RangeError
  elif err == ENOMEM:
    OutOfMemError
  elif err == ENOSPC:
    DiskFullError
  elif err == EIO:
    IOError
  elif err == EINVAL or err == EBADMSG or err == EILSEQ or err == ENOMSG or err == EDESTADDRREQ:
    ValueError
  elif err == E2BIG or err == ENOBUFS:
    FullError
  elif err == ENODATA:
    EmptyError
  elif err == EBUSY or err == ETXTBSY:
    BusyError
  elif err == ECHILD or err == EOWNERDEAD:
    DeadResource
  elif err == ENOLCK:
    ResourceExhaustedError
  elif err == ENFILE:
    DescriptorExhaustedError
  elif err == EACCES or err == EPERM:
    PermissionDenied
  elif err == EAGAIN or err == EWOULDBLOCK:
    RetryError
  elif err == ETIMEDOUT or err == ETIME:
    TimeoutError
  elif err == EINTR:
    InterruptedError
  elif err == EDEADLK:
    DeadlockError
  elif err == EADDRINUSE or err == EISCONN:
    AlreadyConnected
  elif err == EADDRNOTAVAIL:
    AddressNotAvailable
  elif err == EAFNOSUPPORT:
    AddressFamilyUnsupported
  elif err == EOPNOTSUPP or err == ENOTSUP or err == ENOSYS or err == EPROTONOSUPPORT or err == ENOTTY or err == ESPIPE or err == EISDIR or err == ENOTEMPTY:
    BadOperation
  elif err == ECANCELED or err == ECONNABORTED or err == ENETRESET:
    AbortedOperation
  elif err == EALREADY or err == EINPROGRESS:
    AlreadyInProgress
  elif err == ENAMETOOLONG:
    NameTooLong
  elif err == EEXIST:
    NameExists
  elif err == ENOENT or err == EIDRM or err == ENODEV or err == ENOTDIR:
    NameNotFound
  elif err == EFBIG or err == EMSGSIZE:
    ContentTooLong
  elif err == EPIPE or err == EBADF or err == EMFILE or err == ENOSTR or err == ENOTSOCK or err == ENOSR or err == ENXIO or err == ESRCH:
    BadDescriptor
  elif err == ENOEXEC:
    BadExecutable
  elif err == ELOOP or err == EMLINK or err == EXDEV:
    BadLink
  elif err == EPROTOTYPE or err == ENOPROTOOPT:
    BadProtocol
  elif err == EPROTO:
    ProtocolError
  elif err == EROFS:
    ReadonlyProtection
  elif err == EFAULT:
    SegFault
  elif err == ENETDOWN or err == ENETUNREACH or err == ECONNRESET or err == ENOTCONN:
    Disconnected
  elif err == ECONNREFUSED:
    RefusedConnection
  elif err == EHOSTUNREACH:
    UnreachableHost
  elif err == ENOTRECOVERABLE:
    UnrecoverableState
  else:
    Failure

proc httpToErrorCode*(err: int): ErrorCode =
  if err == 200:
    Success
  elif err == 200 or err == 201 or err == 202:
    Success
  elif err == 500:
    Failure
  elif err == 416:
    RangeError
  elif err == 422:
    SyntaxError
  elif err == 507:
    DiskFullError
  elif err == 429:
    BusyError
  elif err == 403 or err == 401 or err == 407 or err == 405 or err == 406:
    PermissionDenied
  elif err == 408 or err == 504:
    TimeoutError
  elif err == 508:
    DeadlockError
  elif err == 400 or err == 415:
    BadOperation
  elif err == 501:
    UnimplementedOperation
  elif err == 414 or err == 431:
    NameTooLong
  elif err == 404:
    NameNotFound
  elif err == 413:
    ContentTooLong
  elif err == 421:
    BadLink
  elif err == 505:
    BadProtocol
  elif err == 502:
    UnreachableHost
  elif err == 511:
    AuthenticationRequired
  elif err == 308 or err == 307:
    RedirectError
  else:
    Failure

proc windowsToErrorCode*(err: int32): ErrorCode =
  if err == 0'i32:
    Success
  elif err == 0'i32:
    Success
  elif err == 534'i32:
    OverflowError
  elif err == 1124'i32:
    Failure
  elif err == 1413'i32:
    IndexError
  elif err == 1745'i32 or err == 1781'i32 or err == 5913'i32 or err == 6604'i32 or err == 8322'i32 or err == 14090'i32 or err == 14091'i32 or err == 15038'i32:
    RangeError
  elif err == 123'i32:
    SyntaxError
  elif err == 8'i32 or err == 13859'i32:
    OutOfMemError
  elif err == 39'i32 or err == 1632'i32 or err == 4314'i32:
    DiskFullError
  elif err == 1001'i32:
    StackOverflow
  elif err == 1117'i32:
    IOError
  elif err == 1639'i32 or err == 10022'i32:
    ValueError
  elif err == 1010'i32 or err == 1018'i32 or err == 1169'i32 or err == 1409'i32 or err == 9017'i32 or err == 14007'i32 or err == 14075'i32:
    KeyError
  elif err == 38'i32 or err == 1100'i32 or err == 1129'i32:
    EndOfStreamError
  elif err == 625'i32:
    SkipError
  elif err == 61'i32 or err == 277'i32 or err == 794'i32 or err == 1502'i32 or err == 4322'i32 or err == 10055'i32 or err == 15083'i32:
    FullError
  elif err == 4306'i32:
    EmptyError
  elif err == 54'i32 or err == 1723'i32 or err == 5909'i32 or err == 7024'i32 or err == 8015'i32 or err == 8206'i32 or err == 8438'i32:
    BusyError
  elif err == 155'i32 or err == 89'i32:
    ResourceExhaustedError
  elif err == 4'i32 or err == 36'i32:
    DescriptorExhaustedError
  elif err == 5'i32 or err == 10013'i32:
    PermissionDenied
  elif err == 1237'i32:
    RetryError
  elif err == 258'i32 or err == 1053'i32 or err == 1121'i32 or err == 1460'i32 or err == 7040'i32 or err == 10060'i32:
    TimeoutError
  elif err == 10004'i32:
    InterruptedError
  elif err == 1131'i32:
    DeadlockError
  elif err == 33'i32 or err == 108'i32 or err == 212'i32 or err == 717'i32 or err == 1055'i32 or err == 1440'i32 or err == 5960'i32:
    LockedError
  elif err == 10048'i32 or err == 10056'i32:
    AlreadyConnected
  elif err == 55'i32 or err == 64'i32:
    AddressNotAvailable
  elif err == 1763'i32:
    AddressFamilyUnsupported
  elif err == 50'i32 or err == 120'i32 or err == 334'i32 or err == 335'i32 or err == 336'i32 or err == 632'i32 or err == 1764'i32 or err == 6834'i32:
    BadOperation
  elif err == 10053'i32 or err == 995'i32 or err == 1235'i32 or err == 1818'i32:
    AbortedOperation
  elif err == 1791'i32 or err == 4056'i32 or err == 10036'i32 or err == 10037'i32:
    AlreadyInProgress
  elif err == 111'i32 or err == 206'i32 or err == 8348'i32 or err == 10063'i32 or err == 15121'i32:
    NameTooLong
  elif err == 183'i32 or err == 1250'i32:
    NameExists
  elif err == 1743'i32 or err == 8349'i32:
    ContentTooLong
  elif err == 6'i32:
    BadDescriptor
  elif err == 11'i32:
    BadExecutable
  elif err == 1142'i32:
    BadLink
  elif err == 10041'i32 or err == 10042'i32 or err == 10043'i32 or err == 10044'i32:
    BadProtocol
  elif err == 19'i32:
    ReadonlyProtection
  elif err == 487'i32:
    SegFault
  elif err == 276'i32 or err == 323'i32 or err == 634'i32 or err == 1392'i32 or err == 1393'i32 or err == 1500'i32 or err == 6843'i32 or err == 9572'i32:
    DiskCorruption
  elif err == 10050'i32 or err == 10051'i32 or err == 10052'i32 or err == 10053'i32 or err == 10054'i32:
    Disconnected
  elif err == 10061'i32:
    RefusedConnection
  elif err == 10065'i32:
    UnreachableHost
  else:
    Failure

proc errorCodeToPosix*(err: ErrorCode): int32 =
  case err
  of Success: 0'i32
  of OverflowError: EOVERFLOW
  of RangeError: ERANGE
  of OutOfMemError: ENOMEM
  of DiskFullError: ENOSPC
  of IOError: EIO
  of ValueError: EINVAL
  of FullError: E2BIG
  of EmptyError: ENODATA
  of BusyError: EBUSY
  of DeadResource: ECHILD
  of ResourceExhaustedError: ENOLCK
  of DescriptorExhaustedError: ENFILE
  of PermissionDenied: EACCES
  of RetryError: EAGAIN
  of TimeoutError: ETIMEDOUT
  of InterruptedError: EINTR
  of DeadlockError: EDEADLK
  of AlreadyConnected: EADDRINUSE
  of AddressNotAvailable: EADDRNOTAVAIL
  of AddressFamilyUnsupported: EAFNOSUPPORT
  of BadOperation: EOPNOTSUPP
  of AbortedOperation: ECANCELED
  of AlreadyInProgress: EALREADY
  of NameTooLong: ENAMETOOLONG
  of NameExists: EEXIST
  of NameNotFound: ENOENT
  of ContentTooLong: EFBIG
  of BadDescriptor: EPIPE
  of BadExecutable: ENOEXEC
  of BadLink: ELOOP
  of BadProtocol: EPROTOTYPE
  of ProtocolError: EPROTO
  of ReadonlyProtection: EROFS
  of SegFault: EFAULT
  of Disconnected: ENETDOWN
  of RefusedConnection: ECONNREFUSED
  of UnreachableHost: EHOSTUNREACH
  of UnrecoverableState: ENOTRECOVERABLE
  else: 1'i32

proc errorCodeToHttp*(err: ErrorCode): int =
  case err
  of Success: 200
  of Failure: 500
  of RangeError: 416
  of SyntaxError: 422
  of DiskFullError: 507
  of BusyError: 429
  of PermissionDenied: 403
  of TimeoutError: 408
  of DeadlockError: 508
  of BadOperation: 400
  of UnimplementedOperation: 501
  of NameTooLong: 414
  of NameNotFound: 404
  of ContentTooLong: 413
  of BadLink: 421
  of BadProtocol: 505
  of UnreachableHost: 502
  of AuthenticationRequired: 511
  of RedirectError: 308
  else: 500

proc errorCodeToWindows*(err: ErrorCode): int32 =
  case err
  of Success: 0'i32
  of OverflowError: 534'i32
  of Failure: 1124'i32
  of IndexError: 1413'i32
  of RangeError: 1745'i32
  of SyntaxError: 123'i32
  of OutOfMemError: 8'i32
  of DiskFullError: 39'i32
  of StackOverflow: 1001'i32
  of IOError: 1117'i32
  of ValueError: 1639'i32
  of KeyError: 1010'i32
  of EndOfStreamError: 38'i32
  of SkipError: 625'i32
  of FullError: 61'i32
  of EmptyError: 4306'i32
  of BusyError: 54'i32
  of ResourceExhaustedError: 155'i32
  of DescriptorExhaustedError: 4'i32
  of PermissionDenied: 5'i32
  of RetryError: 1237'i32
  of TimeoutError: 258'i32
  of InterruptedError: 10004'i32
  of DeadlockError: 1131'i32
  of LockedError: 33'i32
  of AlreadyConnected: 10048'i32
  of AddressNotAvailable: 55'i32
  of AddressFamilyUnsupported: 1763'i32
  of BadOperation: 50'i32
  of AbortedOperation: 10053'i32
  of AlreadyInProgress: 1791'i32
  of NameTooLong: 111'i32
  of NameExists: 183'i32
  of ContentTooLong: 1743'i32
  of BadDescriptor: 6'i32
  of BadExecutable: 11'i32
  of BadLink: 1142'i32
  of BadProtocol: 10041'i32
  of ReadonlyProtection: 19'i32
  of SegFault: 487'i32
  of DiskCorruption: 276'i32
  of Disconnected: 10050'i32
  of RefusedConnection: 10061'i32
  of UnreachableHost: 10065'i32
  else: 1124'i32
